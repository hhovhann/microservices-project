services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: microservices
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-storage:/var/lib/grafana

  config-service:
    build:
      context: ./config-service
    container_name: config-service
    ports:
      - "8888:8888"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres

  discovery-service:
    build:
      context: ./discovery-service
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - config-service

  gateway-service:
    build:
      context: ./gateway-service
    container_name: gateway-service
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - discovery-service

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - postgres
      - discovery-service
    environment:
      SPRING_PROFILES_ACTIVE: docker

  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    ports:
      - "8082:8082"
    depends_on:
      - kafka
      - postgres
      - discovery-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  chat-service:
    build:
      context: ./chat-service
    container_name: user-service
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - postgres
      - discovery-service
    environment:
      SPRING_PROFILES_ACTIVE: docker

  payment-service:
    build:
      context: ./payment-service
    container_name: payment-service
    ports:
      - "8084:8084"
    depends_on:
      - kafka
      - postgres
      - discovery-service
    environment:
      SPRING_PROFILES_ACTIVE: docker

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
    command: npm run dev

volumes:
  postgres_data:
  grafana-storage:
